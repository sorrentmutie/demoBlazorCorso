@using LIbreriaComponentiBlazor.Models
@using Microsoft.AspNetCore.Components.Forms

<h3>Evento @Evento?.Titolo</h3>

@if(Evento != null) {

<EditForm Model="@Evento" OnValidSubmit="@(() => OnSalva.InvokeAsync(Evento))">

    <DataAnnotationsValidator/>

    <div class="form-group">
        <label for="titolo">Titolo</label>
        <InputText id="titolo" class="form-control" @bind-Value="Evento.Titolo"></InputText>
        <ValidationMessage For="@( () => Evento.Titolo )" ></ValidationMessage>
    </div>

     <div class="form-group">
        <label for="localita">Località</label>
        <InputText id="localita" class="form-control" @bind-Value="Evento.Località"></InputText>
        <ValidationMessage For="@( () => Evento.Località )" ></ValidationMessage>
    </div>

     <div class="form-group">
        <label for="data">Data</label>
        <InputDate id="data" class="form-control" @bind-Value="Evento.Data"></InputDate>
    </div>


    <button type="submit" class="btn btn-primary">Salva</button>
    <button type="button" @onclick="OnAnnulla" class="btn btn-warning">Annulla</button>

</EditForm>
}


@code {
    [Parameter]
    public Evento? Evento { get; set; } 
    [Parameter]
    public EventCallback<Evento> OnSalva { get; set; }
    [Parameter]
    public EventCallback OnAnnulla { get; set; }
}
